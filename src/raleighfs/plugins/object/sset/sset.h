#ifndef _RALEIGHFS_OBJECT_SSET_H_
#define _RALEIGHFS_OBJECT_SSET_H_

#include <raleighfs/execute.h>
#include <raleighfs/plugins.h>

typedef enum raleighfs_sset_code {
    RALEIGHFS_SSET_INSERT       = RALEIGHFS_INSERT | 1,
    RALEIGHFS_SSET_UPDATE       = RALEIGHFS_UPDATE | 2,
    RALEIGHFS_SSET_POP          = RALEIGHFS_REMOVE | 3,
    RALEIGHFS_SSET_POP_RANGE    = RALEIGHFS_REMOVE | 4,
    RALEIGHFS_SSET_POP_INDEX    = RALEIGHFS_REMOVE | 5,
    RALEIGHFS_SSET_POP_FIRST    = RALEIGHFS_REMOVE | 7,
    RALEIGHFS_SSET_POP_LAST     = RALEIGHFS_REMOVE | 8,
    RALEIGHFS_SSET_GET          = RALEIGHFS_QUERY  | 9,
    RALEIGHFS_SSET_GET_RANGE    = RALEIGHFS_QUERY  | 10,
    RALEIGHFS_SSET_GET_INDEX    = RALEIGHFS_QUERY  | 11,
    RALEIGHFS_SSET_GET_FIRST    = RALEIGHFS_QUERY  | 13,
    RALEIGHFS_SSET_GET_LAST     = RALEIGHFS_QUERY  | 14,
    RALEIGHFS_SSET_RM           = RALEIGHFS_REMOVE | 15,
    RALEIGHFS_SSET_RM_RANGE     = RALEIGHFS_REMOVE | 16,
    RALEIGHFS_SSET_RM_INDEX     = RALEIGHFS_REMOVE | 17,
    RALEIGHFS_SSET_RM_FIRST     = RALEIGHFS_REMOVE | 19,
    RALEIGHFS_SSET_RM_LAST      = RALEIGHFS_REMOVE | 20,
    RALEIGHFS_SSET_CLEAR        = RALEIGHFS_REMOVE | 21,
    RALEIGHFS_SSET_GET_KEYS     = RALEIGHFS_QUERY  | 22,
    RALEIGHFS_SSET_REVERSE      = RALEIGHFS_IOCTL  | 23,
    RALEIGHFS_SSET_LENGTH       = RALEIGHFS_QUERY  | 24,
    RALEIGHFS_SSET_STATS        = RALEIGHFS_QUERY  | 25,
} raleighfs_sset_code_t;

extern const uint8_t RALEIGHFS_OBJECT_SSET_UUID[16];
extern raleighfs_object_plug_t raleighfs_object_sset;

#endif /* !_RALEIGHFS_OBJECT_SSET_H_ */

