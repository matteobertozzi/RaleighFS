
/* File autogenerated, do not edit */
#ifndef _RPC_CLIENT_H_
#define _RPC_CLIENT_H_

#include <zcl/debug.h>
#include <zcl/ipc.h>
#include <zcl/rpc.h>

#include "rpc.h"


#define SEMANTIC_OPEN_ID 10
#define SEMANTIC_CREATE_ID 11
#define SEMANTIC_DELETE_ID 12
#define SEMANTIC_RENAME_ID 13
#define TRANSACTION_CREATE_ID 20
#define TRANSACTION_COMMIT_ID 21
#define TRANSACTION_ROLLBACK_ID 22
#define NUMBER_GET_ID 30
#define NUMBER_SET_ID 31
#define NUMBER_CAS_ID 32
#define NUMBER_ADD_ID 33
#define NUMBER_MUL_ID 34
#define NUMBER_DIV_ID 35
#define SSET_INSERT_ID 40
#define SSET_UPDATE_ID 41
#define SSET_POP_ID 43
#define SSET_GET_ID 45
#define SSET_SCAN_ID 46
#define FLOW_APPEND_ID 50
#define FLOW_INJECT_ID 51
#define FLOW_WRITE_ID 52
#define FLOW_REMOVE_ID 53
#define FLOW_TRUNCATE_ID 54
#define FLOW_READ_ID 55
#define DEQUE_PUSH_ID 60
#define DEQUE_POP_ID 61
#define SERVER_PING_ID 90
#define SERVER_INFO_ID 91
#define SERVER_QUIT_ID 92
#define SERVER_DEBUG_ID 93

z_rpc_ctx_t *raleighsl_rpc_client_build_request (z_iopoll_entity_t *client,
                                                 uint64_t msg_type,
                                                 uint64_t req_id);

int  raleighsl_rpc_client_parse (z_iopoll_entity_t *client,
                                 z_rpc_map_t *rpc_map,
                                 const struct iovec iov[2]);
int  raleighsl_rpc_client_push_request (z_iopoll_t *iopoll,
                                        z_rpc_ctx_t *ctx,
                                        z_ipc_msgbuf_t *msgbuf,
                                        z_rpc_map_t *rpc_map,
                                        void *sys_callback,
                                        void *ucallback,
                                        void *udata);

#endif /* !_RPC_CLIENT_H_ */